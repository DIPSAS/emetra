<!DOCTYPE html>
<html>
<head>
<title>TCommand Class</title>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta name="generator" content="Documentation Insight" />
<!--Generated by Documentation Insight (http://www.devjetsoftware.com/). -->
<base target="_self" />
<link type="text/css" rel="Stylesheet" href="css/presentation.css" /> 
    <script type="text/javascript" src="js/jquery.min.js"></script>
    <script type="text/javascript" src="js/jquery.cookie.js"></script>
    <script type="text/javascript" src="js/di.js"></script>
  
    <script type="text/javascript" src="js/jquery-migrate.min.js"></script>
    <!--[if (!IE) | (gt IE 8)]><!-->
    <link type='text/css' rel='Stylesheet' href='css/highlighter.css' />
    <!--<![endif]-->
    <!--[if (!IE) | (gt IE 8)]><!-->
    <script src="js/highlight.min.js"></script>
    <!--<![endif]-->
 <script type="text/javascript"> 
      if (($.browser.msie == undefined) || ($.browser.version > 8)) {
        hljs.tabReplace = '  ';
        $(document).ready(function() {
          $('pre').each(function(i, e) {
            hljs.highlightBlock(e);
          });
        });
      }
           </script><script type="text/javascript">
if (top.frames.length == 0)
{
var topicUrl = top.location.href.substring(top.location.href.lastIndexOf("/") + 1, top.location.href.length);
var regex = new RegExp('(mk:@MSITStore|ms-help):?', 'i')
if(!top.location.href.match(regex)) {
	 top.location.href = "index.htm?" + topicUrl;
}}
else if (top && top.navigationFrame && top.navigationFrame.selectTocItem)
{
top.navigationFrame.selectTocItem("Emetra.Command.TCommand");
};
</script>
</head>
<body class="library">
<input type="hidden" id="contentEditableControl" class="userDataStyle" value="false" />
<input type="hidden" id="userDataCache" class="userDataStyle" />
<input type="hidden" id="hiddenScrollOffset" />
<input type="hidden" id="moduleName" value="Emetra.Command" />
<input type="hidden" id="elementId" value="Emetra.Command.TCommand" />
<div id="content">
<div class="topic">
<h1 class="title">TCommand Class</h1>
<div id="mainSection">
<div id="mainBody">
<strong>Namespace</strong>:  <a href="Emetra.Command.htm" title="Emetra.Command">Emetra.Command</a><br />
<div id="inheritanceHierarchySection" class="section">
<div id="inheritanceHierarchyHeader" class="sectionHeader">
<div>
<a href="javascript:void(0)" class="collapsibleAreaHref" title="Collapse">
<span class="collapsibleAreaIcon collapsibleAreaExpanding">
<!---->
</span>
<span class="collapsibleAreaTitle">Inheritance Hierarchy</span>
</a>
</div>
</div>
<div id="inheritanceHierarchyContent" class="sectionContent" contentEditable="false"><span title="TInterfacedObject">TInterfacedObject</span><br />  Emetra.Command.TCommand<br />
</div>
</div>
<div id="syntaxSection" class="section">
<div id="syntaxHeader" class="sectionHeader">
<div>
<a href="javascript:void(0)" class="collapsibleAreaHref" title="Collapse">
<span class="collapsibleAreaIcon collapsibleAreaExpanding">
<!---->
</span>
<span class="collapsibleAreaTitle">Syntax</span>
</a>
</div>
</div>
<div id="syntaxContent" class="sectionContent" contentEditable="false">
<div class="codeSnippet" contentEditable="false"><input class="code" type="hidden" value="" /><div class="codeSnippetTabs"><div class="codeSnippetTabActive"><a>Delphi</a></div></div><div class="codeSnippetCodeContainer"><div class="codeSnippetCode"><pre class="delphi" contentEditable="false">type
 TCommand = class( TInterfacedObject, <a href="Emetra.Command.Interfaces.ICommand.htm" title="Emetra.Command.Interfaces.ICommand">ICommand</a>, ISettingsRead )
 end;
</pre></div></div></div>
</div>
</div>
<p>
        The TCommand type exposes the following members.
      </p>
<div id="IDNZPWRO44M1VSC5UF0ZO2SPCHSNWLCQSBI2PSMVNIS3HQ1LJC3BXFSection" class="section">
<div id="IDNZPWRO44M1VSC5UF0ZO2SPCHSNWLCQSBI2PSMVNIS3HQ1LJC3BXFHeader" class="sectionHeader">
<div>
<a href="javascript:void(0)" class="collapsibleAreaHref" title="Collapse">
<span class="collapsibleAreaIcon collapsibleAreaExpanding">
<!---->
</span>
<span class="collapsibleAreaTitle">Constructors</span>
</a>
</div>
</div>
<div id="IDNZPWRO44M1VSC5UF0ZO2SPCHSNWLCQSBI2PSMVNIS3HQ1LJC3BXFContent" class="sectionContent" contentEditable="false">
<div class="tableSection"><div class="libraryMemberFilter"><div class="filterContainer"><span class="FocusMe">Show: </span><label><input type="checkbox" class="libraryFilterInherited" checked="checked" value="Inherit" />Inherited
                </label><label><input type="checkbox" class="libraryFilterProtected" checked="checked" value="Protected" />Protected
                </label></div></div><table id="IDNZPWRO44M1VSC5UF0ZO2SPCHSNWLCQSBI2PSMVNIS3HQ1LJC3BXF"><colgroup><col width="60px" /><col width="20%" /></colgroup><tbody><tr><th class="iconColumn"> </th><th class="nameColumn">Name</th><th class="descriptionColumn">Description</th></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public constructor" /></td><td class="memberId" data-id="Emetra.Command.TCommand.Create(string)"><input type="hidden" value="Emetra.Command.TCommand.Create(string)" /><a href="Emetra.Command.TCommand.Create(string).htm" title="Emetra.Command.TCommand.Create(string)">Create(string)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.Create(string)"><p>Overloaded. Initializes a new instance of the <a href="Emetra.Command.TCommand.htm" title="Emetra.Command.TCommand">TCommand</a> class.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public constructor" /></td><td class="memberId" data-id="Emetra.Command.TCommand.CreateInvokable(string,string)"><input type="hidden" value="Emetra.Command.TCommand.CreateInvokable(string,string)" /><a href="Emetra.Command.TCommand.CreateInvokable.htm" title="Emetra.Command.TCommand.CreateInvokable(string,string)">CreateInvokable(string,string)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.CreateInvokable(string,string)"><p>An invokable command is a special type of command than can be invoked on any object, even one that isn't a command target.</p></div></td></tr></tbody></table><a href="#mainBody">Top</a></div>
</div>
</div>
<div id="IDK33B1GZJPJMIPGK2NA5PVEQGXOEO4FR2YYX2LNEZJ5LBVR5A2A0ESection" class="section">
<div id="IDK33B1GZJPJMIPGK2NA5PVEQGXOEO4FR2YYX2LNEZJ5LBVR5A2A0EHeader" class="sectionHeader">
<div>
<a href="javascript:void(0)" class="collapsibleAreaHref" title="Collapse">
<span class="collapsibleAreaIcon collapsibleAreaExpanding">
<!---->
</span>
<span class="collapsibleAreaTitle">Methods</span>
</a>
</div>
</div>
<div id="IDK33B1GZJPJMIPGK2NA5PVEQGXOEO4FR2YYX2LNEZJ5LBVR5A2A0EContent" class="sectionContent" contentEditable="false">
<div class="tableSection"><div class="libraryMemberFilter"><div class="filterContainer"><span class="FocusMe">Show: </span><label><input type="checkbox" class="libraryFilterInherited" checked="checked" value="Inherit" />Inherited
                </label><label><input type="checkbox" class="libraryFilterProtected" checked="checked" value="Protected" />Protected
                </label></div></div><table id="IDK33B1GZJPJMIPGK2NA5PVEQGXOEO4FR2YYX2LNEZJ5LBVR5A2A0E"><colgroup><col width="60px" /><col width="20%" /></colgroup><tbody><tr><th class="iconColumn"> </th><th class="nameColumn">Name</th><th class="descriptionColumn">Description</th></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.AddParameter(string,Variant)"><input type="hidden" value="Emetra.Command.TCommand.AddParameter(string,Variant)" /><a href="Emetra.Command.TCommand.AddParameter(string,Variant).htm" title="Emetra.Command.TCommand.AddParameter(string,Variant)">AddParameter(string,Variant)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.AddParameter(string,Variant)"><p>Overloaded. Standard command parameter need to have a name to be retrieved via   the Read methods.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.AddParameterForInvokable(Variant)"><input type="hidden" value="Emetra.Command.TCommand.AddParameterForInvokable(Variant)" /><a href="Emetra.Command.TCommand.AddParameterForInvokable(Variant).htm" title="Emetra.Command.TCommand.AddParameterForInvokable(Variant)">AddParameterForInvokable(Variant)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.AddParameterForInvokable(Variant)"><p>Overloaded. Parameters for invokable methods don't need a name, because when the command is invoked on an object, the parameters are applied in the order they are added. The number and type of the parameters are both essential, so this method must be called in the correct sequence to match the signature of the receiver.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.BeforeDestruction"><input type="hidden" value="Emetra.Command.TCommand.BeforeDestruction" /><a href="Emetra.Command.TCommand.BeforeDestruction.htm" title="Emetra.Command.TCommand.BeforeDestruction">BeforeDestruction</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.BeforeDestruction"><p>Represents method <code class="inline">BeforeDestruction</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.CommaText"><input type="hidden" value="Emetra.Command.TCommand.CommaText" /><a href="Emetra.Command.TCommand.CommaText.htm" title="Emetra.Command.TCommand.CommaText">CommaText</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.CommaText"><p>Represents method <code class="inline">CommaText</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.Exists(string)"><input type="hidden" value="Emetra.Command.TCommand.Exists(string)" /><a href="Emetra.Command.TCommand.Exists.htm" title="Emetra.Command.TCommand.Exists(string)">Exists(string)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.Exists(string)"><p>Represents method <code class="inline">Exists(string)</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.Get_Invokable"><input type="hidden" value="Emetra.Command.TCommand.Get_Invokable" /><a href="Emetra.Command.TCommand.Get_Invokable.htm" title="Emetra.Command.TCommand.Get_Invokable">Get_Invokable</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.Get_Invokable"><p>Represents method <code class="inline">Get_Invokable</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.Get_Name"><input type="hidden" value="Emetra.Command.TCommand.Get_Name" /><a href="Emetra.Command.TCommand.Get_Name.htm" title="Emetra.Command.TCommand.Get_Name">Get_Name</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.Get_Name"><p>Represents method <code class="inline">Get_Name</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.Get_ParameterCount"><input type="hidden" value="Emetra.Command.TCommand.Get_ParameterCount" /><a href="Emetra.Command.TCommand.Get_ParameterCount.htm" title="Emetra.Command.TCommand.Get_ParameterCount">Get_ParameterCount</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.Get_ParameterCount"><p>Represents method <code class="inline">Get_ParameterCount</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.Get_ParameterValue(integer)"><input type="hidden" value="Emetra.Command.TCommand.Get_ParameterValue(integer)" /><a href="Emetra.Command.TCommand.Get_ParameterValue.htm" title="Emetra.Command.TCommand.Get_ParameterValue(integer)">Get_ParameterValue(integer)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.Get_ParameterValue(integer)"><p>Represents method <code class="inline">Get_ParameterValue(integer)</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.Get_Receiver"><input type="hidden" value="Emetra.Command.TCommand.Get_Receiver" /><a href="Emetra.Command.TCommand.Get_Receiver.htm" title="Emetra.Command.TCommand.Get_Receiver">Get_Receiver</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.Get_Receiver"><p>Represents method <code class="inline">Get_Receiver</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.Matches(string)"><input type="hidden" value="Emetra.Command.TCommand.Matches(string)" /><a href="Emetra.Command.TCommand.Matches.htm" title="Emetra.Command.TCommand.Matches(string)">Matches(string)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.Matches(string)"><p>Represents method <code class="inline">Matches(string)</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.ReadBool(string,boolean)"><input type="hidden" value="Emetra.Command.TCommand.ReadBool(string,boolean)" /><a href="Emetra.Command.TCommand.ReadBool(string,boolean).htm" title="Emetra.Command.TCommand.ReadBool(string,boolean)">ReadBool(string,boolean)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.ReadBool(string,boolean)"><p>Overloaded. Represents method <code class="inline">ReadBool(string,boolean)</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.ReadDate(string,TDateTime)"><input type="hidden" value="Emetra.Command.TCommand.ReadDate(string,TDateTime)" /><a href="Emetra.Command.TCommand.ReadDate.htm" title="Emetra.Command.TCommand.ReadDate(string,TDateTime)">ReadDate(string,TDateTime)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.ReadDate(string,TDateTime)"><p>Represents method <code class="inline">ReadDate(string,TDateTime)</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.ReadFloat(string,double)"><input type="hidden" value="Emetra.Command.TCommand.ReadFloat(string,double)" /><a href="Emetra.Command.TCommand.ReadFloat.htm" title="Emetra.Command.TCommand.ReadFloat(string,double)">ReadFloat(string,double)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.ReadFloat(string,double)"><p>Represents method <code class="inline">ReadFloat(string,double)</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.ReadInteger(string,integer)"><input type="hidden" value="Emetra.Command.TCommand.ReadInteger(string,integer)" /><a href="Emetra.Command.TCommand.ReadInteger(string,integer).htm" title="Emetra.Command.TCommand.ReadInteger(string,integer)">ReadInteger(string,integer)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.ReadInteger(string,integer)"><p>Overloaded. Represents method <code class="inline">ReadInteger(string,integer)</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.ReadString(string,string)"><input type="hidden" value="Emetra.Command.TCommand.ReadString(string,string)" /><a href="Emetra.Command.TCommand.ReadString.htm" title="Emetra.Command.TCommand.ReadString(string,string)">ReadString(string,string)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.ReadString(string,string)"><p>Represents method <code class="inline">ReadString(string,string)</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.TryGetString(string,string@)"><input type="hidden" value="Emetra.Command.TCommand.TryGetString(string,string@)" /><a href="Emetra.Command.TCommand.TryGetString.htm" title="Emetra.Command.TCommand.TryGetString(string,string)">TryGetString(string,string)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.TryGetString(string,string@)"><p>Represents method <code class="inline">TryGetString(string,string)</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.TryGetValue(string,Variant@)"><input type="hidden" value="Emetra.Command.TCommand.TryGetValue(string,Variant@)" /><a href="Emetra.Command.TCommand.TryGetValue.htm" title="Emetra.Command.TCommand.TryGetValue(string,Variant)">TryGetValue(string,Variant)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.TryGetValue(string,Variant@)"><p>Represents method <code class="inline">TryGetValue(string,Variant)</code>.</p></div></td></tr></tbody></table><a href="#mainBody">Top</a></div>
</div>
</div>
<div id="IDJBUSPULOIRLKHC5FKOQRAHJ53D4WQGKF2RCIFUI0WJQKFEYIKUIPSection" class="section">
<div id="IDJBUSPULOIRLKHC5FKOQRAHJ53D4WQGKF2RCIFUI0WJQKFEYIKUIPHeader" class="sectionHeader">
<div>
<a href="javascript:void(0)" class="collapsibleAreaHref" title="Collapse">
<span class="collapsibleAreaIcon collapsibleAreaExpanding">
<!---->
</span>
<span class="collapsibleAreaTitle">Fields</span>
</a>
</div>
</div>
<div id="IDJBUSPULOIRLKHC5FKOQRAHJ53D4WQGKF2RCIFUI0WJQKFEYIKUIPContent" class="sectionContent" contentEditable="false">
<div class="tableSection"><div class="libraryMemberFilter"><div class="filterContainer"><span class="FocusMe">Show: </span><label><input type="checkbox" class="libraryFilterInherited" checked="checked" value="Inherit" />Inherited
                </label><label><input type="checkbox" class="libraryFilterProtected" checked="checked" value="Protected" />Protected
                </label></div></div><table id="IDJBUSPULOIRLKHC5FKOQRAHJ53D4WQGKF2RCIFUI0WJQKFEYIKUIP"><colgroup><col width="60px" /><col width="20%" /></colgroup><tbody><tr><th class="iconColumn"> </th><th class="nameColumn">Name</th><th class="descriptionColumn">Description</th></tr><tr class="member"><td><img src="images/privfield.gif" title="private field" /></td><td class="memberId" data-id="Emetra.Command.TCommand.fCommandName"><input type="hidden" value="Emetra.Command.TCommand.fCommandName" /><a href="Emetra.Command.TCommand.fCommandName.htm" title="Emetra.Command.TCommand.fCommandName">fCommandName</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.fCommandName"><p>Represents field <code class="inline">fCommandName</code>.</p></div></td></tr><tr class="member"><td><img src="images/privfield.gif" title="private field" /></td><td class="memberId" data-id="Emetra.Command.TCommand.fParameterValues"><input type="hidden" value="Emetra.Command.TCommand.fParameterValues" /><a href="Emetra.Command.TCommand.fParameterValues.htm" title="Emetra.Command.TCommand.fParameterValues">fParameterValues</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.fParameterValues"><p>Represents field <code class="inline">fParameterValues</code>.</p></div></td></tr><tr class="member"><td><img src="images/privfield.gif" title="private field" /></td><td class="memberId" data-id="Emetra.Command.TCommand.fReceiver"><input type="hidden" value="Emetra.Command.TCommand.fReceiver" /><a href="Emetra.Command.TCommand.fReceiver.htm" title="Emetra.Command.TCommand.fReceiver">fReceiver</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.fReceiver"><p>Represents field <code class="inline">fReceiver</code>.</p></div></td></tr></tbody></table><a href="#mainBody">Top</a></div>
</div>
</div>
<div id="remarksSection" class="section">
<input class="tagName" type="hidden" value="remarks" />
<div id="remarksHeader" class="sectionHeader">
<div>
<a href="javascript:void(0)" class="collapsibleAreaHref" title="Collapse">
<span class="collapsibleAreaIcon collapsibleAreaExpanding">
<!---->
</span>
<span class="collapsibleAreaTitle">Remarks</span>
</a>
</div>
</div>
<div id="remarksContent" class="sectionContent" contentEditable="false">
<p>
All the methods of TCommand are private, and it has no properties, only
property accessors. The reason for this is that you should always use a
command as an ICommand interface, and not as an object. Commands are
meant to be passed around in the application, and the factory has no
way of knowing when a command has outlived it's purpose and can be
freed.
</p>
</div>
</div>
<div id="seealsoSection" class="section">
<input class="tagName" type="hidden" value="seealso" />
<div id="seealsoHeader" class="sectionHeader">
<div>
<a href="javascript:void(0)" class="collapsibleAreaHref" title="Collapse">
<span class="collapsibleAreaIcon collapsibleAreaExpanding">
<!---->
</span>
<span class="collapsibleAreaTitle">See Also</span>
</a>
</div>
</div>
<div id="seealsoContent" class="sectionContent" contentEditable="false">
<h4 class="subHeading">Reference</h4><ul class="seeAlsoCodeReference"><li><a href="Emetra.Command.htm" title="Emetra.Command">Emetra.Command</a></li></ul>
</div>
</div>
</div>
</div>
</div>
</div>
<div id="footer">
<div id="footerContent">Powered by <a href="http://www.devjetsoftware.com/products/documentation-insight/" target="_blank">Documentation Insight</a></div>
</div>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
<title>TCommand Methods</title>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta name="generator" content="Documentation Insight" />
<!--Generated by Documentation Insight (http://www.devjetsoftware.com/). -->
<base target="_self" />
<link type="text/css" rel="Stylesheet" href="css/presentation.css" /> 
    <script type="text/javascript" src="js/jquery.min.js"></script>
    <script type="text/javascript" src="js/jquery.cookie.js"></script>
    <script type="text/javascript" src="js/di.js"></script>
  
    <script type="text/javascript" src="js/jquery-migrate.min.js"></script>
    <!--[if (!IE) | (gt IE 8)]><!-->
    <link type='text/css' rel='Stylesheet' href='css/highlighter.css' />
    <!--<![endif]-->
    <!--[if (!IE) | (gt IE 8)]><!-->
    <script src="js/highlight.min.js"></script>
    <!--<![endif]-->
 <script type="text/javascript"> 
      if (($.browser.msie == undefined) || ($.browser.version > 8)) {
        hljs.tabReplace = '  ';
        $(document).ready(function() {
          $('pre').each(function(i, e) {
            hljs.highlightBlock(e);
          });
        });
      }
           </script><script type="text/javascript">
if (top.frames.length == 0)
{
var topicUrl = top.location.href.substring(top.location.href.lastIndexOf("/") + 1, top.location.href.length);
var regex = new RegExp('(mk:@MSITStore|ms-help):?', 'i')
if(!top.location.href.match(regex)) {
	 top.location.href = "index.htm?" + topicUrl;
}}
else if (top && top.navigationFrame && top.navigationFrame.selectTocItem)
{
top.navigationFrame.selectTocItem("Emetra.Command.TCommand_Methods");
};
</script>
</head>
<body class="library">
<input type="hidden" id="contentEditableControl" class="userDataStyle" value="false" />
<input type="hidden" id="userDataCache" class="userDataStyle" />
<input type="hidden" id="hiddenScrollOffset" />
<input type="hidden" id="moduleName" value="" />
<input type="hidden" id="elementId" value="" />
<div id="content">
<div class="topic">
<h1 class="title">TCommand Methods</h1>
<div id="mainSection">
<div id="mainBody">
<div id="IDCCC2FYY2MLHWGGBRTDYRM3PHEFDLJVABGVE4SPIBUJOX3DBKWIVOSection" class="section">
<div id="IDCCC2FYY2MLHWGGBRTDYRM3PHEFDLJVABGVE4SPIBUJOX3DBKWIVOHeader" class="sectionHeader">
<div>
<a href="javascript:void(0)" class="collapsibleAreaHref" title="Collapse">
<span class="collapsibleAreaIcon collapsibleAreaExpanding">
<!---->
</span>
<span class="collapsibleAreaTitle">Methods</span>
</a>
</div>
</div>
<div id="IDCCC2FYY2MLHWGGBRTDYRM3PHEFDLJVABGVE4SPIBUJOX3DBKWIVOContent" class="sectionContent" contentEditable="false">
<div class="tableSection"><table id="IDCCC2FYY2MLHWGGBRTDYRM3PHEFDLJVABGVE4SPIBUJOX3DBKWIVO"><colgroup><col width="60px" /><col width="20%" /></colgroup><tbody><tr><th class="iconColumn"> </th><th class="nameColumn">Name</th><th class="descriptionColumn">Description</th></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.AddParameter(string,Variant)"><input type="hidden" value="Emetra.Command.TCommand.AddParameter(string,Variant)" /><a href="Emetra.Command.TCommand.AddParameter(string,Variant).htm" title="Emetra.Command.TCommand.AddParameter(string,Variant)">AddParameter(string,Variant)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.AddParameter(string,Variant)"><p>Overloaded. Standard command parameter need to have a name to be retrieved via   the Read methods.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.AddParameterForInvokable(Variant)"><input type="hidden" value="Emetra.Command.TCommand.AddParameterForInvokable(Variant)" /><a href="Emetra.Command.TCommand.AddParameterForInvokable(Variant).htm" title="Emetra.Command.TCommand.AddParameterForInvokable(Variant)">AddParameterForInvokable(Variant)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.AddParameterForInvokable(Variant)"><p>Overloaded. Parameters for invokable methods don't need a name, because when the command is invoked on an object, the parameters are applied in the order they are added. The number and type of the parameters are both essential, so this method must be called in the correct sequence to match the signature of the receiver.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.BeforeDestruction"><input type="hidden" value="Emetra.Command.TCommand.BeforeDestruction" /><a href="Emetra.Command.TCommand.BeforeDestruction.htm" title="Emetra.Command.TCommand.BeforeDestruction">BeforeDestruction</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.BeforeDestruction"><p>Represents method <code class="inline">BeforeDestruction</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.CommaText"><input type="hidden" value="Emetra.Command.TCommand.CommaText" /><a href="Emetra.Command.TCommand.CommaText.htm" title="Emetra.Command.TCommand.CommaText">CommaText</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.CommaText"><p>Represents method <code class="inline">CommaText</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.Exists(string)"><input type="hidden" value="Emetra.Command.TCommand.Exists(string)" /><a href="Emetra.Command.TCommand.Exists.htm" title="Emetra.Command.TCommand.Exists(string)">Exists(string)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.Exists(string)"><p>Represents method <code class="inline">Exists(string)</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.Get_Invokable"><input type="hidden" value="Emetra.Command.TCommand.Get_Invokable" /><a href="Emetra.Command.TCommand.Get_Invokable.htm" title="Emetra.Command.TCommand.Get_Invokable">Get_Invokable</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.Get_Invokable"><p>Represents method <code class="inline">Get_Invokable</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.Get_Name"><input type="hidden" value="Emetra.Command.TCommand.Get_Name" /><a href="Emetra.Command.TCommand.Get_Name.htm" title="Emetra.Command.TCommand.Get_Name">Get_Name</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.Get_Name"><p>Represents method <code class="inline">Get_Name</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.Get_ParameterCount"><input type="hidden" value="Emetra.Command.TCommand.Get_ParameterCount" /><a href="Emetra.Command.TCommand.Get_ParameterCount.htm" title="Emetra.Command.TCommand.Get_ParameterCount">Get_ParameterCount</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.Get_ParameterCount"><p>Represents method <code class="inline">Get_ParameterCount</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.Get_ParameterValue(integer)"><input type="hidden" value="Emetra.Command.TCommand.Get_ParameterValue(integer)" /><a href="Emetra.Command.TCommand.Get_ParameterValue.htm" title="Emetra.Command.TCommand.Get_ParameterValue(integer)">Get_ParameterValue(integer)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.Get_ParameterValue(integer)"><p>Represents method <code class="inline">Get_ParameterValue(integer)</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.Get_Receiver"><input type="hidden" value="Emetra.Command.TCommand.Get_Receiver" /><a href="Emetra.Command.TCommand.Get_Receiver.htm" title="Emetra.Command.TCommand.Get_Receiver">Get_Receiver</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.Get_Receiver"><p>Represents method <code class="inline">Get_Receiver</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.Matches(string)"><input type="hidden" value="Emetra.Command.TCommand.Matches(string)" /><a href="Emetra.Command.TCommand.Matches.htm" title="Emetra.Command.TCommand.Matches(string)">Matches(string)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.Matches(string)"><p>Represents method <code class="inline">Matches(string)</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.ReadBool(string,boolean)"><input type="hidden" value="Emetra.Command.TCommand.ReadBool(string,boolean)" /><a href="Emetra.Command.TCommand.ReadBool(string,boolean).htm" title="Emetra.Command.TCommand.ReadBool(string,boolean)">ReadBool(string,boolean)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.ReadBool(string,boolean)"><p>Overloaded. Represents method <code class="inline">ReadBool(string,boolean)</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.ReadDate(string,TDateTime)"><input type="hidden" value="Emetra.Command.TCommand.ReadDate(string,TDateTime)" /><a href="Emetra.Command.TCommand.ReadDate.htm" title="Emetra.Command.TCommand.ReadDate(string,TDateTime)">ReadDate(string,TDateTime)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.ReadDate(string,TDateTime)"><p>Represents method <code class="inline">ReadDate(string,TDateTime)</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.ReadFloat(string,double)"><input type="hidden" value="Emetra.Command.TCommand.ReadFloat(string,double)" /><a href="Emetra.Command.TCommand.ReadFloat.htm" title="Emetra.Command.TCommand.ReadFloat(string,double)">ReadFloat(string,double)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.ReadFloat(string,double)"><p>Represents method <code class="inline">ReadFloat(string,double)</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.ReadInteger(string,integer)"><input type="hidden" value="Emetra.Command.TCommand.ReadInteger(string,integer)" /><a href="Emetra.Command.TCommand.ReadInteger(string,integer).htm" title="Emetra.Command.TCommand.ReadInteger(string,integer)">ReadInteger(string,integer)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.ReadInteger(string,integer)"><p>Overloaded. Represents method <code class="inline">ReadInteger(string,integer)</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.ReadString(string,string)"><input type="hidden" value="Emetra.Command.TCommand.ReadString(string,string)" /><a href="Emetra.Command.TCommand.ReadString.htm" title="Emetra.Command.TCommand.ReadString(string,string)">ReadString(string,string)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.ReadString(string,string)"><p>Represents method <code class="inline">ReadString(string,string)</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.TryGetString(string,string@)"><input type="hidden" value="Emetra.Command.TCommand.TryGetString(string,string@)" /><a href="Emetra.Command.TCommand.TryGetString.htm" title="Emetra.Command.TCommand.TryGetString(string,string)">TryGetString(string,string)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.TryGetString(string,string@)"><p>Represents method <code class="inline">TryGetString(string,string)</code>.</p></div></td></tr><tr class="member"><td><img src="images/privmethod.gif" title="private method" /></td><td class="memberId" data-id="Emetra.Command.TCommand.TryGetValue(string,Variant@)"><input type="hidden" value="Emetra.Command.TCommand.TryGetValue(string,Variant@)" /><a href="Emetra.Command.TCommand.TryGetValue.htm" title="Emetra.Command.TCommand.TryGetValue(string,Variant)">TryGetValue(string,Variant)</a></td><td><div class="memberSummary" data-id="Emetra.Command.TCommand.TryGetValue(string,Variant@)"><p>Represents method <code class="inline">TryGetValue(string,Variant)</code>.</p></div></td></tr></tbody></table><a href="#mainBody">Top</a></div>
</div>
</div>
</div>
</div>
</div>
</div>
<div id="footer">
<div id="footerContent">Powered by <a href="http://www.devjetsoftware.com/products/documentation-insight/" target="_blank">Documentation Insight</a></div>
</div>
</body>
</html>

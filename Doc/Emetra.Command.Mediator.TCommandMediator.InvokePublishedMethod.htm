<!DOCTYPE html>
<html>
<head>
<title>TCommandMediator.InvokePublishedMethod(TReceiver,ICommand) Method</title>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta name="generator" content="Documentation Insight" />
<!--Generated by Documentation Insight (http://www.devjetsoftware.com/). -->
<base target="_self" />
<link type="text/css" rel="Stylesheet" href="css/presentation.css" /> 
    <script type="text/javascript" src="js/jquery.min.js"></script>
    <script type="text/javascript" src="js/jquery.cookie.js"></script>
    <script type="text/javascript" src="js/di.js"></script>
  
    <script type="text/javascript" src="js/jquery-migrate.min.js"></script>
    <!--[if (!IE) | (gt IE 8)]><!-->
    <link type='text/css' rel='Stylesheet' href='css/highlighter.css' />
    <!--<![endif]-->
    <!--[if (!IE) | (gt IE 8)]><!-->
    <script src="js/highlight.min.js"></script>
    <!--<![endif]-->
 <script type="text/javascript"> 
      if (($.browser.msie == undefined) || ($.browser.version > 8)) {
        hljs.tabReplace = '  ';
        $(document).ready(function() {
          $('pre').each(function(i, e) {
            hljs.highlightBlock(e);
          });
        });
      }
           </script><script type="text/javascript">
if (top.frames.length == 0)
{
var topicUrl = top.location.href.substring(top.location.href.lastIndexOf("/") + 1, top.location.href.length);
var regex = new RegExp('(mk:@MSITStore|ms-help):?', 'i')
if(!top.location.href.match(regex)) {
	 top.location.href = "index.htm?" + topicUrl;
}}
else if (top && top.navigationFrame && top.navigationFrame.selectTocItem)
{
top.navigationFrame.selectTocItem("Emetra.Command.Mediator.TCommandMediator.InvokePublishedMethod(TReceiver,ICommand)");
};
</script>
</head>
<body class="library">
<input type="hidden" id="contentEditableControl" class="userDataStyle" value="false" />
<input type="hidden" id="userDataCache" class="userDataStyle" />
<input type="hidden" id="hiddenScrollOffset" />
<input type="hidden" id="moduleName" value="Emetra.Command.Mediator" />
<input type="hidden" id="elementId" value="Emetra.Command.Mediator.TCommandMediator.InvokePublishedMethod(TReceiver,ICommand)" />
<div id="content">
<div class="topic">
<h1 class="title">TCommandMediator.InvokePublishedMethod(TReceiver,ICommand) Method</h1>
<div id="mainSection">
<div id="mainBody">
<strong>Namespace</strong>:  <a href="Emetra.Command.Mediator.htm" title="Emetra.Command.Mediator">Emetra.Command.Mediator</a><br />
<div id="syntaxSection" class="section">
<div id="syntaxHeader" class="sectionHeader">
<div>
<a href="javascript:void(0)" class="collapsibleAreaHref" title="Collapse">
<span class="collapsibleAreaIcon collapsibleAreaExpanding">
<!---->
</span>
<span class="collapsibleAreaTitle">Syntax</span>
</a>
</div>
</div>
<div id="syntaxContent" class="sectionContent" contentEditable="false">
<div class="codeSnippet" contentEditable="false"><input class="code" type="hidden" value="" /><div class="codeSnippetTabs"><div class="codeSnippetTabActive"><a>Delphi</a></div></div><div class="codeSnippetCodeContainer"><div class="codeSnippetCode"><pre class="delphi" contentEditable="false">private
 function InvokePublishedMethod( const AReceiver: <a href="Emetra.Command.Mediator.TReceiver.htm" title="Emetra.Command.Mediator.TReceiver">TReceiver</a>; const AInvokableCommand: <a href="Emetra.Command.Interfaces.ICommand.htm" title="Emetra.Command.Interfaces.ICommand">ICommand</a> ): boolean;
</pre></div></div></div><div class="subSection"><h4 class="subHeading">Parameters</h4><dl id="parameters"><dt><span class="parameter">AReceiver</span></dt><dd>Type: System.Void
        <br /><p /></dd><dt><span class="parameter">AInvokableCommand</span></dt><dd>Type: <a href="Emetra.Command.Interfaces.ICommand.htm" title="Emetra.Command.Interfaces.ICommand">ICommand</a><br /><p /></dd><dt><span class="invalidParameter">ATargetObject</span></dt><dd><p>
The object upon which the method will be invoked.
</p></dd><dt><span class="invalidParameter">AMethodParameters</span></dt><dd><p>
This an ICommand with Invokable property is set to true. The number,
order and type of parameters must match that of the method.
</p></dd></dl></div><div class="subSection"><h4 class="subHeading">Return Value</h4><div id="returnsType">Type: <span class="returnType"> boolean
      </span></div><div id="returns" contentEditable="false"><p> </p></div></div>
</div>
</div>
<div id="remarksSection" class="section">
<input class="tagName" type="hidden" value="remarks" />
<div id="remarksHeader" class="sectionHeader">
<div>
<a href="javascript:void(0)" class="collapsibleAreaHref" title="Collapse">
<span class="collapsibleAreaIcon collapsibleAreaExpanding">
<!---->
</span>
<span class="collapsibleAreaTitle">Remarks</span>
</a>
</div>
</div>
<div id="remarksContent" class="sectionContent" contentEditable="false">
<p>
This object doesn't have to implement ICommandReceiver. By using RTTI,
all objects can be receievers as long has they have published methods.
</p>
</div>
</div>
<div id="seealsoSection" class="section">
<input class="tagName" type="hidden" value="seealso" />
<div id="seealsoHeader" class="sectionHeader">
<div>
<a href="javascript:void(0)" class="collapsibleAreaHref" title="Collapse">
<span class="collapsibleAreaIcon collapsibleAreaExpanding">
<!---->
</span>
<span class="collapsibleAreaTitle">See Also</span>
</a>
</div>
</div>
<div id="seealsoContent" class="sectionContent" contentEditable="false">
<h4 class="subHeading">Reference</h4><ul class="seeAlsoCodeReference"><li><a href="Emetra.Command.Mediator.TCommandMediator.htm" title="Emetra.Command.Mediator.TCommandMediator">TCommandMediator</a></li><li><a href="Emetra.Command.Mediator.htm" title="Emetra.Command.Mediator">Emetra.Command.Mediator</a></li></ul>
</div>
</div>
</div>
</div>
</div>
</div>
<div id="footer">
<div id="footerContent">Powered by <a href="http://www.devjetsoftware.com/products/documentation-insight/" target="_blank">Documentation Insight</a></div>
</div>
</body>
</html>
